/* 
Responsive Breakpoint là gì?
-Breakpoint là điểm dừng (ngưỡng) mà tại đó giao diện website thay đổi cách hiển thị để phù hợp với kích thước màn hình thiết bị.
- Tức khi trình duyệt có chiều rộng cụ thể (ví dụ 768px), ta sẽ đổi bố cục, font, ảnh,... để phù hợp hơn với thiết bị như tablet, mobile, laptop.
Tại sao cần Breakpoint?
-Bởi vì mỗi thiết bị có kích thước khác nhau:

Thiết bị
Mobile	≤ 480px
Tablet	481px – 768px
Laptop nhỏ	769px – 1024px
Desktop	≥ 1025px
Cần breakpoint để:

-Chuyển từ menu ngang sang menu dọc

-Bố trí lại lưới sản phẩm

-Ẩn bớt hoặc thay đổi kích thước font, ảnh…

Cách viết Breakpoint trong CSS:
Cú pháp Media Queries:

@media (max-width: 768px) {
  //CSS áp dụng cho thiết bị có chiều rộng nhỏ hơn hoặc bằng 768px 
}

@media (min-width: 769px) and (max-width: 1024px) {
  //CSS áp dụng cho tablet ngang, laptop nhỏ
}

Ví dụ
Desktop
.container {
  display: flex;
  flex-direction: row;
}

Mobile
@media (max-width: 480px) {
  .container {
    flex-direction: column;//hi màn hình nhỏ hơn 480px (như điện thoại), container sẽ đổi từ ngang sang dọc.
  }
}
Dùng Breakpoint hiệu quả:
Kỹ thuật	Gợi ý sử dụng
max-width	Dùng cho thiết kế mobile-first
min-width	Dùng cho thiết kế desktop-first
Sắp xếp theo tăng dần	Thiết kế dễ bảo trì hơn với mobile-first
Sử dụng đơn vị em	Có thể tốt hơn px khi kết hợp với font scalable
Tóm lại:
Breakpoint = điểm thay đổi giao diện

Kích hoạt bằng media queries

Giúp website hiển thị tối ưu trên mọi thiết bị
 */
/* 
 Responsive - media queries là gì?
 Để xử lý thay đổi giao diện giữa các dạng màn hình khác nhau (chiều rộng màn hình khác nhau), chúng ta sẽ sử dụng truy vấn @media.

Cấu trúc
Truy vấn @media được viết trong file CSS, với cấu trúc như sau:

@media only|not Media-type and (Media-future and|or|not Media-future) {
    tag {
        property: value;
    }
}
    
@media:	Khai báo bắt đầu media query
only:	(tùy chọn) Giúp ngăn trình duyệt cũ áp dụng các styles không hỗ trợ
not:	(tùy chọn) Đảo ngược điều kiện – tức là áp dụng khi điều kiện sai
media-type	Loại thiết bị: all, screen, print, speech
and	Dùng để kết hợp nhiều điều kiện
or	Không hỗ trợ trực tiếp trong CSS – phải dùng nhiều @media riêng
media-feature	Tính chất thiết bị: max-width, min-width, orientation,...
Media-type

Giá trị	Mô tả
screen	Dành cho trang hiển thị (không dành cho bản in).
print	Dành cho bản in (không dành cho trang hiển thị).
all	Mặc định, dành cho trang hiển thị và cả bảng in.
speech	Dành cho phiên bản hỗ trợ đọc thành tiếng.
Media-future

Một số điều kiện phổ biến:
Điều kiện	Ý nghĩa
max-width:	Khi chiều rộng nhỏ hơn hoặc bằng giá trị
min-width:	Khi chiều rộng lớn hơn hoặc bằng giá trị
orientation: portrait	Thiết bị ở chế độ dọc
orientation: landscape	Thiết bị ở chế độ ngang
min-resolution	Dành cho thiết bị có độ phân giải cao
  */
/* Giao diện cho desktop */
.container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
}

/* Giao diện cho tablet */
@media (max-width: 1024px) {
    .container {
        grid-template-columns: repeat(2, 1fr);
    }
}

/* Giao diện cho mobile */
@media (max-width: 600px) {
    .container {
        grid-template-columns: 1fr;
    }
}

/* 
  Responsive image
  Để image có thể chạy tốt trên các màn hinh khác nhau, chúng ta sử dụng width và max-width kết hợp.
   Cách viết một responsive image
img {
    width: percent;
    max-with: pixcel;
}
width: percent: cho chiều rộng image co giản tỷ lệ theo chiều rộng của màn hình thiết bị,
 VD: width: 100% thì image lúc nào cũng sẽ có chiều rộng bằng với chiều rộng màn hình
  thiết bị, cho dù màn hinh thiết bị co giản rộng lớn ra sao thì image luôn là 100% 
  (chiều cao mặc định auto - tự động tỷ lệ theo chiều rộng).
max-width: pixcel: chiều rộng lớn nhất thường sẽ cho bằng với chiều rộng thực tế của image,
 mục đích là khi màn hình thiết bị lớn hơn image, thì chiều rộng của image sẽ trả 
 về ban đầu, mục đích không phóng to image, tránh làm giảm chất lượng hình ảnh
 Ví dụ:
 img {
    width: 100%;
    max-width: 960px;// chiều rộng của image 
} 
 */
 /* 
 Responsive thay đổi image
 Khi làm responsive, một hình ảnh có thể thay đổi theo kích thước thiết bị bằng cách:
Cách 1: Dùng thẻ <picture> để thay ảnh
Ví dụ:
<picture>
  <source media="(max-width: 600px)" srcset="img-small.jpg">
  <source media="(max-width: 1024px)" srcset="img-medium.jpg">
  <img src="img-large.jpg" alt="Ảnh sản phẩm">
</picture>
Cách 2: Dùng srcset và sizes trong thẻ <img>: Trình duyệt sẽ tự chọn ảnh phù hợp với kích thước màn hình và độ phân giải, giúp tối ưu tốc độ.
<img 
  src="img-large.jpg" 
  srcset="img-small.jpg 600w, img-medium.jpg 1024w, img-large.jpg 1600w" 
  sizes="(max-width: 600px) 100vw, (max-width: 1024px) 50vw, 33vw" 
  alt="Hình ảnh sản phẩm">
Cách 3: Dùng CSS background-image (theo media queries)
<div class="banner"></div>

<style>
.banner {
  height: 300px;
  background-size: cover;
  background-position: center;
}

@media (max-width: 600px) {
  .banner {
    background-image: url('img-small.jpg');
  }
}

@media (max-width: 1024px) {
  .banner {
    background-image: url('img-medium.jpg');
  }
}

@media (min-width: 1025px) {
  .banner {
    background-image: url('img-large.jpg');
  }
}
</style>
Respone paragrap
ví dụ respone paragrap
  */
  /* <p class="responsive-paragraph">
  Đây là một đoạn văn được thiết kế để hiển thị tốt trên mọi thiết bị, từ điện thoại nhỏ đến màn hình máy tính lớn.
</p> */


.responsive-paragraph {
  font-size: 16px;
  line-height: 1.6;
  padding: 10px;
}

/* Trên màn hình nhỏ */
@media (max-width: 600px) {
  .responsive-paragraph {
    font-size: 14px;
    padding: 8px;
  }
}

/* Trên màn hình lớn hơn */
@media (min-width: 1024px) {
  .responsive-paragraph {
    font-size: 18px;
    max-width: 800px;
    margin: auto;
  }
}


  